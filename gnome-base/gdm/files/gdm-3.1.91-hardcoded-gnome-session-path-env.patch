From 791fb64fbf7d4752c4e607708739f627f09b71e2 Mon Sep 17 00:00:00 2001
From: Alexandre Rostovtsev <tetromino@gmail.com>
Date: Sun, 7 Aug 2011 02:15:11 -0400
Subject: [PATCH 1/2] Don't hardcode gnome-session path, don't drop harmless
 env variables

Don't hardcode the location of the gnome-session executable to /usr/bin.
The system administrator may want have installed a custom wrapper in
/usr/local that he wants gdm to use instead.

Also, change the logic for how environment variables in spawned session
processes are set. Instead of inheriting i18n variables from the current
process and then setting the needed ones, we now:
1. set needed environment variables;
2. inherit env variables that had not been set in step 1 from the
   current process;
3. drop specific variables that may cause problems.

This allows a system administrator to force gdm to spawn sessions with a
particular custom environment variable set to e.g. work around hardware
driver bugs.

Addresses https://bugzilla.gnome.org/show_bug.cgi?id=656094
---
 daemon/gdm-greeter-session.c |    2 +-
 daemon/gdm-welcome-session.c |   44 ++++++++++++++++++++++++++---------------
 2 files changed, 29 insertions(+), 17 deletions(-)

diff --git a/daemon/gdm-greeter-session.c b/daemon/gdm-greeter-session.c
index 8032065..73653b9 100644
--- a/daemon/gdm-greeter-session.c
+++ b/daemon/gdm-greeter-session.c
@@ -78,7 +78,7 @@ gdm_greeter_session_new (const char *display_name,
         GObject *object;
 
         object = g_object_new (GDM_TYPE_GREETER_SESSION,
-                               "command", BINDIR "/gnome-session -f --debug",
+                               "command", "gnome-session -f --debug",
                                "server-dbus-path", GDM_GREETER_SERVER_DBUS_PATH,
                                "server-dbus-interface", GDM_GREETER_SERVER_DBUS_INTERFACE,
                                "server-env-var-name", "GDM_GREETER_DBUS_ADDRESS",
diff --git a/daemon/gdm-welcome-session.c b/daemon/gdm-welcome-session.c
index 41144a8..ff11da9 100644
--- a/daemon/gdm-welcome-session.c
+++ b/daemon/gdm-welcome-session.c
@@ -238,32 +238,28 @@ build_welcome_environment (GdmWelcomeSession *welcome_session,
 {
         GHashTable    *hash;
         struct passwd *pwent;
-        static const char * const optional_environment[] = {
+        static const char * const lang_environment[] = {
                 "LANG", "LANGUAGE", "LC_CTYPE", "LC_NUMERIC", "LC_TIME",
                 "LC_COLLATE", "LC_MONETARY", "LC_MESSAGES", "LC_PAPER",
                 "LC_NAME", "LC_ADDRESS", "LC_TELEPHONE", "LC_MEASUREMENT",
                 "LC_IDENTIFICATION", "LC_ALL", "WINDOWPATH",
                 NULL
         };
+        static const char * const drop_environment[] = {
+                "MAIL", NULL
+        };
+        char **curr_environment;
         char *system_data_dirs;
         int i;
 
         load_lang_config_file (LANG_CONFIG_FILE,
-                               (const char **) optional_environment);
+                               (const char **) lang_environment);
+        curr_environment = g_listenv ();
 
-        /* create a hash table of current environment, then update keys has necessary */
+        /* Create a hash table for environment variables.
+         * First, insert keys we need to set. */
         hash = g_hash_table_new_full (g_str_hash, g_str_equal, g_free, g_free);
 
-        for (i = 0; optional_environment[i] != NULL; i++) {
-                if (g_getenv (optional_environment[i]) == NULL) {
-                        continue;
-                }
-
-                g_hash_table_insert (hash,
-                                     g_strdup (optional_environment[i]),
-                                     g_strdup (g_getenv (optional_environment[i])));
-        }
-
         system_data_dirs = g_strjoinv (":", (char **) g_get_system_data_dirs ());
 
         g_hash_table_insert (hash,
@@ -292,7 +288,6 @@ build_welcome_environment (GdmWelcomeSession *welcome_session,
         g_hash_table_insert (hash, g_strdup ("USERNAME"), g_strdup (welcome_session->priv->user_name));
 
         g_hash_table_insert (hash, g_strdup ("GDM_VERSION"), g_strdup (VERSION));
-        g_hash_table_remove (hash, "MAIL");
 
         g_hash_table_insert (hash, g_strdup ("HOME"), g_strdup ("/"));
         g_hash_table_insert (hash, g_strdup ("PWD"), g_strdup ("/"));
@@ -318,12 +313,28 @@ build_welcome_environment (GdmWelcomeSession *welcome_session,
                 g_hash_table_insert (hash, g_strdup ("GDM_SEAT_ID"), g_strdup (seat_id));
         }
 
-        g_hash_table_insert (hash, g_strdup ("PATH"), g_strdup (g_getenv ("PATH")));
-
         g_hash_table_insert (hash, g_strdup ("RUNNING_UNDER_GDM"), g_strdup ("true"));
         g_hash_table_insert (hash, g_strdup ("GVFS_DISABLE_FUSE"), g_strdup ("1"));
         g_hash_table_insert (hash, g_strdup ("DCONF_PROFILE"), g_strdup ("gdm"));
 
+        /* Second, insert environment variables from current process that haven't been set in the hash yet. */
+        for (i = 0; curr_environment[i] != NULL; i++) {
+                if (g_hash_table_lookup (hash, curr_environment[i]) != NULL ||
+                    g_getenv (curr_environment[i]) == NULL) {
+                        continue;
+                }
+
+                g_hash_table_insert (hash,
+                                     g_strdup (curr_environment[i]),
+                                     g_strdup (g_getenv (curr_environment[i])));
+        }
+
+        /* Third, remove undesirable environment variables. */
+        for (i = 0; drop_environment[i] != NULL; i++)
+                g_hash_table_remove (hash, drop_environment[i]);
+
+        g_strfreev (curr_environment);
+
         return hash;
 }
 
@@ -337,6 +348,7 @@ get_welcome_environment (GdmWelcomeSession *welcome_session,
         hash = build_welcome_environment (welcome_session, start_session);
 
         env = g_ptr_array_new ();
+
         g_hash_table_foreach (hash, (GHFunc)listify_hash, env);
         g_hash_table_destroy (hash);
 
-- 
1.7.6.1

