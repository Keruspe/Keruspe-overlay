From c873cd11951546264b7c68dc8235fbf3f488499d Mon Sep 17 00:00:00 2001
From: Marc-Antoine Perennou <Marc-Antoine@Perennou.com>
Date: Sat, 29 Jan 2011 10:50:04 +0100
Subject: [PATCH] GPaste native applet

---
 js/ui/panel.js                |    3 +-
 js/ui/status/gpaste.js        |  108 +++++++++++++++++++++++++++++++++++++++++
 js/ui/statusIconDispatcher.js |    1 +
 3 files changed, 111 insertions(+), 1 deletions(-)
 create mode 100644 js/ui/status/gpaste.js

diff --git a/js/ui/panel.js b/js/ui/panel.js
index 4d0e001..2b9bd68 100644
--- a/js/ui/panel.js
+++ b/js/ui/panel.js
@@ -33,8 +33,9 @@ const ANIMATED_ICON_UPDATE_TIMEOUT = 100;
 const SPINNER_UPDATE_TIMEOUT = 130;
 const SPINNER_SPEED = 0.02;
 
-const STANDARD_TRAY_ICON_ORDER = ['a11y', 'display', 'keyboard', 'volume', 'bluetooth', 'network', 'battery'];
+const STANDARD_TRAY_ICON_ORDER = ['gpaste-applet', 'a11y', 'display', 'keyboard', 'volume', 'bluetooth', 'network', 'battery'];
 const STANDARD_TRAY_ICON_SHELL_IMPLEMENTATION = {
+    'gpaste-applet': imports.ui.status.gpaste.Indicator,
     'a11y': imports.ui.status.accessibility.ATIndicator,
     'volume': imports.ui.status.volume.Indicator,
     'battery': imports.ui.status.power.Indicator,
diff --git a/js/ui/status/gpaste.js b/js/ui/status/gpaste.js
new file mode 100644
index 0000000..aadfc86
--- /dev/null
+++ b/js/ui/status/gpaste.js
@@ -0,0 +1,108 @@
+/* -*- mode: js2; js2-basic-offset: 4; indent-tabs-mode: nil -*- */
+
+const DBus = imports.dbus;
+const Lang = imports.lang;
+const St = imports.gi.St;
+const Pango = imports.gi.Pango;
+const PanelMenu = imports.ui.panelMenu;
+const PopupMenu = imports.ui.popupMenu;
+const Gettext = imports.gettext.domain('gnome-shell');
+
+const _ = Gettext.gettext;
+
+const BUS_NAME = 'org.gnome.GPaste';
+const OBJECT_PATH = '/org/gnome/GPaste';
+
+const GPasteInterface = {
+    name: BUS_NAME,
+    methods: [
+        { name: 'GetHistory', inSignature: '', outSignature: 'as' },
+        { name: 'Select', inSignature: 'u', outSignature: '' },
+        { name: 'Delete', inSignature: 'u', outSignature: '' },
+        { name: 'Empty', inSignature: '', outSignature: '' },
+        //{ name: 'Start', inSignature: '', outSignature: '' },
+        //{ name: 'Quit', inSignature: '', outSignature: '' },
+        ],
+    signals: [
+        { name: 'Changed', inSignature: '', outSignature: '' },
+        ],
+    properties: [
+        ]
+};
+let GPasteProxy = DBus.makeProxyClass(GPasteInterface);
+
+function Indicator() {
+    this._init.apply(this, arguments);
+}
+
+Indicator.prototype = {
+    __proto__: PanelMenu.SystemStatusButton.prototype,
+
+    _init: function() {
+        PanelMenu.SystemStatusButton.prototype._init.call(this, 'edit-paste-symbolic');
+        this._proxy = new GPasteProxy(DBus.session, BUS_NAME, OBJECT_PATH);
+        this._fillMenu();
+        this._proxy.connect('Changed', Lang.bind(this, this._fillMenu));
+    },
+
+    _select: function(index) {
+        this._proxy.SelectRemote(index);
+    },
+
+    _delete: function(index) {
+        this._proxy.DeleteRemote(index);
+    },
+
+    _empty: function() {
+        this._proxy.EmptyRemote();
+    },
+/*
+    _toggleDaemon: function() {
+        print("Toggled " + this._killSwitch.state);
+        if (this._killSwitch.state)
+            this._proxy.StartRemote();
+        else
+            this._proxy.QuitRemote();
+    },
+*/
+    _fillMenu: function() {
+        this.menu.removeAll();
+        //this._killSwitch = new PopupMenu.PopupSwitchMenuItem(_("GPaste daemon"), true);
+        //this._killSwitch.connect('toggled', Lang.bind(this, this._toggleDaemon));
+        //this.menu.addMenuItem(this._killSwitch);
+        //this.menu.addMenuItem(new PopupMenu.PopupSeparatorMenuItem());
+        this._proxy.GetHistoryRemote(Lang.bind(this, function(history) {
+            if (history.length == 0) {
+                let emptyItem = new PopupMenu.PopupMenuItem('(Empty)', {reactive: false});
+                this.menu.addMenuItem(emptyItem);
+            } else {
+                let index;
+                let limit = 20;
+                if (history.length < 20) limit = history.length;
+                for (index = 0; index < limit; ++index) {
+                    let selection = new PopupMenu.PopupMenuItem(history[index].replace('\n', ' '));
+                    let label = selection.label;
+                    let inner_index = index;
+                    label.clutter_text.max_length = 60;
+                    label.clutter_text.ellipsize = Pango.EllipsizeMode.END;
+                    //selection.actor.button_mask = St.ButtonMask.ONE | St.ButtonMask.THREE;
+                    selection.connect('activate', Lang.bind(this, function(actor, event) {
+                        this._select(inner_index);
+                    }));
+                    let deletor = new St.Button({label: 'x'});
+                    deletor.connect('clicked', Lang.bind(this, function(actor, event) {
+                        this._delete(inner_index);
+                    }));
+                    selection.indicator = deletor;
+                    selection.addActor(deletor);
+                    this.menu.addMenuItem(selection);
+                }
+                this.menu.addMenuItem(new PopupMenu.PopupSeparatorMenuItem());
+                let emptyItem = new PopupMenu.PopupMenuItem('Empty history');
+                emptyItem.connect('activate', Lang.bind(this, this._empty));
+                this.menu.addMenuItem(emptyItem)
+            }
+        }));
+    }
+};
+
diff --git a/js/ui/statusIconDispatcher.js b/js/ui/statusIconDispatcher.js
index e159b39..da1535c 100644
--- a/js/ui/statusIconDispatcher.js
+++ b/js/ui/statusIconDispatcher.js
@@ -9,6 +9,7 @@ const NotificationDaemon = imports.ui.notificationDaemon;
 const Util = imports.misc.util;
 
 const STANDARD_TRAY_ICON_IMPLEMENTATIONS = {
+    'gpaste-applet': 'gpaste-applet',
     'bluetooth-applet': 'bluetooth',
     'gnome-volume-control-applet': 'volume', // renamed to gnome-sound-applet
                                              // when moved to control center
-- 
1.7.4.1.26.g00e6e.dirty

