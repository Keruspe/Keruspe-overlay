From 25884b4b480c18dae05f45e6739241d3e11cd12f Mon Sep 17 00:00:00 2001
From: Giovanni Campagna <gcampagna@src.gnome.org>
Date: Tue, 25 Jan 2011 22:06:40 +0100
Subject: [PATCH] PopupMenu: make parameters overridable in items

Make all subclasses of PopupMenuBase accept a params argument, which
can be used to make the item non reactive, not responsive to hover
and, as a new feature, with a different style class.

https://bugzilla.gnome.org/show_bug.cgi?id=621707
---
 data/theme/gnome-shell.css |    4 ++++
 js/ui/popupMenu.js         |   28 +++++++++++++++++++---------
 js/ui/statusMenu.js        |    4 ++--
 3 files changed, 25 insertions(+), 11 deletions(-)

diff --git a/data/theme/gnome-shell.css b/data/theme/gnome-shell.css
index ba931ad..7bf17d4 100644
--- a/data/theme/gnome-shell.css
+++ b/data/theme/gnome-shell.css
@@ -178,6 +178,10 @@ StTooltip StLabel {
     background-image: url("toggle-on-intl.svg");
 }
 
+.popup-inactive-menu-item {
+	font-style: italic;
+}
+
 /* Panel */
 
 #panel {
diff --git a/js/ui/popupMenu.js b/js/ui/popupMenu.js
index 30f353e..4e88a2a 100644
--- a/js/ui/popupMenu.js
+++ b/js/ui/popupMenu.js
@@ -55,7 +55,9 @@ PopupBaseMenuItem.prototype = {
     _init: function (params) {
         params = Params.parse (params, { reactive: true,
                                          activate: true,
-                                         hover: true });
+                                         hover: true,
+                                         style_class: null
+                                       });
         this.actor = new Shell.GenericContainer({ style_class: 'popup-menu-item',
                                                   reactive: params.reactive,
                                                   track_hover: params.reactive,
@@ -72,6 +74,9 @@ PopupBaseMenuItem.prototype = {
         this._spacing = 0;
         this.active = false;
 
+        if (params.style_class)
+            this.actor.add_style_class_name(params.style_class);
+
         if (params.reactive && params.activate) {
             this.actor.connect('button-release-event', Lang.bind(this, this._onButtonReleaseEvent));
             this.actor.connect('key-press-event', Lang.bind(this, this._onKeyPressEvent));
@@ -533,8 +538,8 @@ function PopupSwitchMenuItem() {
 PopupSwitchMenuItem.prototype = {
     __proto__: PopupBaseMenuItem.prototype,
 
-    _init: function(text, active) {
-        PopupBaseMenuItem.prototype._init.call(this);
+    _init: function(text, active, params) {
+        PopupBaseMenuItem.prototype._init.call(this, params);
 
         this.label = new St.Label({ text: text });
         this._switch = new Switch(active);
@@ -562,15 +567,15 @@ PopupSwitchMenuItem.prototype = {
 }
 
 
-function PopupImageMenuItem(text, iconName) {
-    this._init(text, iconName);
+function PopupImageMenuItem() {
+    this._init.apply(this, arguments);
 }
 
 PopupImageMenuItem.prototype = {
     __proto__: PopupBaseMenuItem.prototype,
 
-    _init: function (text, iconName) {
-        PopupBaseMenuItem.prototype._init.call(this);
+    _init: function (text, iconName, params) {
+        PopupBaseMenuItem.prototype._init.call(this, params);
 
         this.label = new St.Label({ text: text });
         this.addActor(this.label);
@@ -615,8 +620,13 @@ PopupMenuBase.prototype = {
     _init: function(sourceActor, styleClass) {
         this.sourceActor = sourceActor;
 
-        this.box = new St.BoxLayout({ style_class: styleClass,
-                                      vertical: true });
+        // GJS bug: it complains when an optional property is undefined
+        if (styleClass !== undefined) {
+            this.box = new St.BoxLayout({ style_class: styleClass,
+                                          vertical: true });
+        } else {
+            this.box = new St.BoxLayout({ vertical: true });
+        }
 
         this.isOpen = false;
         this._activeMenuItem = null;
diff --git a/js/ui/statusMenu.js b/js/ui/statusMenu.js
index f834aad..9ca5692 100644
--- a/js/ui/statusMenu.js
+++ b/js/ui/statusMenu.js
@@ -99,12 +99,12 @@ StatusMenuButton.prototype = {
     _createSubMenu: function() {
         let item;
 
-        item = new PopupMenu.PopupImageMenuItem(_("Available"), 'user-available', true);
+        item = new PopupMenu.PopupImageMenuItem(_("Available"), 'user-available');
         item.connect('activate', Lang.bind(this, this._setPresenceStatus, GnomeSession.PresenceStatus.AVAILABLE));
         this.menu.addMenuItem(item);
         this._presenceItems[GnomeSession.PresenceStatus.AVAILABLE] = item;
 
-        item = new PopupMenu.PopupImageMenuItem(_("Busy"), 'user-busy', true);
+        item = new PopupMenu.PopupImageMenuItem(_("Busy"), 'user-busy');
         item.connect('activate', Lang.bind(this, this._setPresenceStatus, GnomeSession.PresenceStatus.BUSY));
         this.menu.addMenuItem(item);
         this._presenceItems[GnomeSession.PresenceStatus.BUSY] = item;
-- 
1.7.3.5